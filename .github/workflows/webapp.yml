name: Build and Push Docker Image

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
   
    - name: Login to Azure Container Registry
      uses: docker/login-action@v2
      with:
        registry: demowebapp12.azurecr.io
        username: ${{ secrets.ACR_USERNAME }} # Renamed for clarity
        password: ${{ secrets.ACR_PASSWORD }} # Renamed for clarity

    - name: Set up .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x'

    - name: Build Docker Image
      run: docker build -t demowebapp12.azurecr.io/demowebapp12:${{ github.sha }} -f VSRAdminAPI/Dockerfile .

    - name: Push Docker Image to ACR
      run: docker push demowebapp12.azurecr.io/demowebapp12:${{ github.sha }}

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy to Azure Web App
      run: |
        # First check if webapp exists
        if ! az webapp show --name myAppService --resource-group myResourceGroup &>/dev/null; then
          # Create webapp if it doesn't exist
          az webapp create \
            --resource-group myResourceGroup \
            --name myAppService \
            --plan demo-webapp \
            --deployment-container-image-name demowebapp12.azurecr.io/demowebapp12:${{ github.sha }}
        else
          # Update existing webapp
          az webapp config container set \
            --name myAppService \
            --resource-group myResourceGroup \
            --docker-custom-image-name demowebapp12.azurecr.io/demowebapp12:${{ github.sha }} \
            --docker-registry-server-url https://demowebapp12.azurecr.io \
            --docker-registry-server-user ${{ secrets.ACR_USERNAME }} \
            --docker-registry-server-password ${{ secrets.ACR_PASSWORD }}
        fi
