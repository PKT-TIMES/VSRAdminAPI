name: Build and Push Docker Image

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      RESOURCE_GROUP: demowebapp
      APP_PLAN: myAppPlan
      APP_NAME: myAppService
      REGION: centralindia
      ACR_NAME: demowebapp1221.azurecr.io
      IMAGE_NAME: demowebapp1221
      IMAGE_TAG: latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Docker Login to ACR
      uses: docker/login-action@v2
      with:
        registry: ${{ env.ACR_NAME }}
        username: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientId }}
        password: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientSecret }}

    - name: Set up .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x'

    - name: Build Docker Image
      run: docker build -t ${{ env.ACR_NAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} -f VSRAdminAPI/Dockerfile .

    - name: Push Docker Image to ACR
      run: docker push ${{ env.ACR_NAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

    - name: Create App Service Plan (if not exists)
      run: |
        if ! az appservice plan show --name $APP_PLAN --resource-group $RESOURCE_GROUP &>/dev/null; then
          az appservice plan create \
            --name $APP_PLAN \
            --resource-group $RESOURCE_GROUP \
            --sku B1 \
            --is-linux \
            --location $REGION
        else
          echo "App Service Plan already exists."
        fi

    - name: Create Web App (if not exists)
      run: |
        if ! az webapp show --name $APP_NAME --resource-group $RESOURCE_GROUP &>/dev/null; then
          az webapp create \
            --name $APP_NAME \
            --resource-group $RESOURCE_GROUP \
            --plan $APP_PLAN \
            --deployment-container-image-name $ACR_NAME/$IMAGE_NAME:$IMAGE_TAG
        else
          echo "Web App already exists."
        fi

    - name: Assign Role to Web App (Contributor)
      run: |
        WEBAPP_ID=$(az webapp show --name $APP_NAME --resource-group $RESOURCE_GROUP --query "id" -o tsv)
        az role assignment create \
          --assignee ${{ fromJson(secrets.AZURE_CREDENTIALS).clientId }} \
          --role Contributor \
          --scope $WEBAPP_ID || echo "Role might already be assigned."

    - name: Configure Web App to use container image
      run: |
        az webapp config container set \
          --name $APP_NAME \
          --resource-group $RESOURCE_GROUP \
          --container-image-name $ACR_NAME/$IMAGE_NAME:$IMAGE_TAG \
          --container-registry-url https://$ACR_NAME \
          --container-registry-user ${{ fromJson(secrets.AZURE_CREDENTIALS).clientId }} \
          --container-registry-password ${{ fromJson(secrets.AZURE_CREDENTIALS).clientSecret }}
